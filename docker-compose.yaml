version: '3'
services:
  app:
    build:
      context: .
    env_file:
      - .env
    ports:
      - 5000:5000
    volumes:
     - .:/app
     - app_modules:/app/node_modules
    command: yarn start:dev
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:latest
    env_file:
      .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    env_file:
      .env
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-storage:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  # file_db:
  #   image: mongo:latest
  #   env_file:
  #     .env
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  #     MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - file-storage:/data/db
  #   restart: unless-stopped


volumes:
  db_data:
  minio-storage:
  app_modules:
  
  